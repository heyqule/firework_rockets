---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by heyqule.
--- DateTime: 8/30/2022 11:12 PM
---
require 'constant'
local ScriptSharedFunctions = require 'shared'

local deployed_crates = {}

local acceptable_rockets = {
    ['firework/random-rocket'] = RANDOM_ROCKET_EFFECT_ID,
    ['firework/colorful-rocket'] = COLORFUL_ROCKET_EFFECT_ID,
    ['firework/cool-rocket'] = COOL_ROCKET_EFFECT_ID,
    ['firework/warm-rocket'] = WARM_ROCKET_EFFECT_ID,
}

local on_created_entity = function(event)
    local entity = event.created_entity
    if not (entity and entity.valid and entity.name == 'firework/mortar-crate') then return end
    local surface = entity.surface
    local position = entity.position
    deployed_crates[surface.index .. '-' .. position.x .. '-' .. position.y] = {
        entity = entity,
        next_tick = event.tick + math.random(3,9) * 61
    }
end

local on_entity_removed = function(event)
    local entity = event.entity
    if not (entity and entity.valid and entity.name == 'firework/mortar-crate') then return end
    local surface = entity.surface
    local position = entity.position
    deployed_crates[surface.index .. '-' .. position.x .. '-' .. position.y] = nil
end

local process_crates = function(event)
    for key, turret in pairs(deployed_crates) do
        if event.tick < turret.next_tick then
            goto process_crates_for_continue
        end

        local entity = turret.entity
        if not (entity and entity.valid) then
            deployed_crates[key] = nil
            deployed_crates_size = deployed_crates_size - 1
            goto process_crates_for_continue
        end

        local inventory = entity.get_inventory(defines.inventory.turret_ammo)
        local contents = inventory.get_contents()
        for invkey, value in pairs(contents) do
            if acceptable_rockets[invkey] and value > 0
            then
                ScriptSharedFunctions.create_firework(
                        entity.surface.index,
                        entity.position,
                        acceptable_rockets[invkey]
                )
                inventory.remove({name=invkey,count=1})
                turret.next_tick = event.tick + math.random(3,9) * 61
            end
        end

        ::process_crates_for_continue::
    end
end


local mortar_crate = {}

mortar_crate.events =
{
    [defines.events.on_built_entity] = on_created_entity,
    [defines.events.on_robot_built_entity] = on_created_entity,
    [defines.events.script_raised_built] = on_created_entity,
    [defines.events.script_raised_revive] = on_created_entity,
    [defines.events.on_entity_cloned] = on_created_entity,

    [defines.events.on_entity_died] = on_entity_removed,
    [defines.events.script_raised_destroy] = on_entity_removed,
    [defines.events.on_player_mined_entity] = on_entity_removed,
    [defines.events.on_robot_mined_entity] = on_entity_removed,
}

mortar_crate.on_nth_tick = {
    [settings.startup['firework-rocket-mortar-process-interval'].value] = process_crates
}
mortar_crate.on_init = function()
    global.deployed_crates = global.deployed_crates or deployed_crates
end

mortar_crate.on_load = function()
    deployed_crates = global.deployed_crates or deployed_crates
end

return mortar_crate